import React, { useEffect, useState, useRef } from 'react';
import { useNavigate } from "react-router-dom";
import Image from "../../components/UI/Image/Image"
import "./IA.css";
import Wave from "../../components/Wave/Wave"

import CardSuggestion from "../../components/CardSuggestion/CardSuggestion"

import BookServices from "../../services/BookServices"

import Modal from "../../components/Modal/Modal";

import Button from "../../components/UI/Button/Button";
import FontBookBackground from "../../components/FontBookBackground/FontBookBackground"
import FontTextBackground from "../../components/FontTextBackground/FontTextBackground"

import MochiSad from "../../images/sad-peachcat.gif"
import FrequenceLivre from "../../images/Frequence_livres_ia.png"
import PoidsVariable from "../../images/PoidsVariables.png"
import PrecisionModel from "../../images/PrecisionModel.png"
import CoutModel from "../../images/CoutModel.png"
import Result from "../../images/ResultatsPredictions.png"
function Search() {

    const [isOpenHelpWebsite, setIsOpenHelpWebsite] = useState(false);
    const [isOpenPoidsVariable, setIsOpenPoidsVariable] = useState(false);
    const [isOpenResult, setIsOpenResult] = useState(false);
    const navigate = useNavigate();

    const links = [
        { url: "https://inside-machinelearning.com/premier-projet-keras/", label: "Tutoriel d√©butant machine learning" },
        { url: "https://www.kaggle.com/code/jl18pg052/classification-tensorflow-and-feature-selection", label: "Kaggle tutoriel de classification" }
    ]

    return (
        <div className="main_container">
            <div className="title_story">
                <h1>IA et livres </h1>
            </div>
            <br></br><br></br>

            <Wave text={"Pour faire du machine learning, il faut imp√©rativement avoir des donn√©es."}></Wave>

            <div className="section" name="section1">
                <div>
                    <FontTextBackground description={"\n Besoin : √Çge et genre du lecteur, cat√©gorie de livre et livre pr√©f√©r√©. \n Probl√®me : Trop complexe √† trouver"} main={"Solution : \n Les g√©n√©rer avec de l'al√©atoire"}></FontTextBackground>
                </div>
            </div>

            <Wave text={"Une fois les donn√©es obtenues, il est temps de les travailler, et les complications au niveau algorithmie commencent."} description_modal="üìú Explications üìú" onClick={() => setIsOpenHelpWebsite(true)}></Wave>
            {isOpenHelpWebsite && <Modal setIsOpen={setIsOpenHelpWebsite} title={"Recherches vari√©es"} img={MochiSad} legend={"Probl√®mes : Connaissances en machine learning fragiles. \n Ainsi, nous avons d√ª passer beaucoup de temps √† faire des recherches. \n\n Exemple de tutoriels suivis (cliquez pour y acc√©der):"} links={links} />}
            <br></br><br></br>

            <Image image={FrequenceLivre} legend="R√©partition des cat√©gories de livre dans notre dataset" classNameList="space_picture" />

            <Wave text={"Il faut maintenant regarder informatiquement quelles variables sont int√©ressantes pour le mod√®le d'apprentissage que l'on cr√©era par la suite"} description_modal="‚öñÔ∏è R√©partition des poids ‚öñÔ∏è" onClick={() => setIsOpenPoidsVariable(true)}></Wave>
            {isOpenPoidsVariable && <Modal setIsOpen={setIsOpenPoidsVariable} title={"R√©partition des poids de chaque variable"} img={PoidsVariable} legend={"Avec respectivement les valeurs : \n 0 : Nom \n 1 : Pr√©nom \n 2 : √Çge \n 3 : Genre du lecteur \n 4 : Genre de livre pr√©f√©r√©"} />}

            <Image image={PrecisionModel} legend="Courbes de pr√©cision du mod√®le" classNameList="space_picture" />
            <Image image={CoutModel} legend="Fonction de perte du mod√®le" classNameList="space_picture" />
            <div className="section" name="section2">
                <div>
                    <FontBookBackground description={"Les r√©sultats obtenues par la suite ne sont malheureusement pas exploitable."} main={"Nous esp√©rons vous avoir \n cultiv√© sur ce th√®me !"} description_modal="üìö R√©sultat peu probant üìö" onClick={() => setIsOpenResult(true)}></FontBookBackground>
                </div>
            </div>
            {isOpenResult && <Modal setIsOpen={setIsOpenResult} title={"Tableau de corr√©lation des valeurs pr√©dites et r√©elles"} img={Result} legend={"R√©sultats lors de la pr√©diction avec les valeurs de test : peu exploitable"} />}

        </div >
    );
};

export default Search;